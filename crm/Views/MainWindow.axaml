<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:crm.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:cust="using:crm.Views.custom"
		xmlns:tabview="using:crm.Views.tabs"
		xmlns:tabvms="using:crm.ViewModels.tabs"
		xmlns:material="using:Material.Icons.Avalonia"
		xmlns:scrnvm="using:crm.ViewModels.tabs.home.screens.users"
		xmlns:scrnview="using:crm.Views.tabs.home.screens.users"
		xmlns:controls="using:crm.Views.tabs.home.controls"
		xmlns:conv="using:crm.Views.converters"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		Width="1280"
		Height="720"
        x:Class="crm.Views.MainWindow"
		ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="-1"
		ShowActivated="True"
		Title="RaceUP CRM"
		Icon="/Assets/icon.ico"								
		WindowState="{Binding WindowState}"
		Name="mainWindow">

	<Design.DataContext>
		<vm:mainVM/>
	</Design.DataContext>

	<Window.Resources>
		<conv:UserPopupVisibleToArrowButtonBackgroundConverter x:Key="userMenuBackgroundConverter"/>		
	</Window.Resources>

	<Window.Styles>
		<Style Selector="TextBlock">
			<Setter Property="FontFamily" Value="/Assets/fonts/Inter/Inter.ttf#Inter"/>
		</Style>
		<Style Selector="ContextMenu">
			<Setter Property="FontFamily" Value="/Assets/fonts/Inter/Inter.ttf#Inter"/>
		</Style>
		<Style Selector="TextBox">
			<Setter Property="FontFamily" Value="/Assets/fonts/Inter/Inter.ttf#Inter"/>
		</Style>
		<Style Selector="Button /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="TextBlock.FontFamily" Value="/Assets/fonts/Inter/Inter.ttf#Inter"/>
		</Style>


		<Style Selector="Button.Semaphore">
			<Setter Property="CornerRadius" Value="50"/>
			<Setter Property="Background" Value="Transparent"/>
		</Style>
		<Style Selector="Button.Semaphore /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Margin" Value="0"/>
		</Style>
		<Style Selector="Button.Icon /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="CornerRadius" Value="0"/>
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForeground}"/>
		</Style>
		<Style Selector="Button.Icon:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource TopPanelControlBackgroundPointerOver}"/>
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForegroundPointerOver}"/>
			<Setter Property="BorderBrush" Value="Transparent" />
		</Style>
		<Style Selector="Button.Icon:disabled /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
		</Style>
		<Style Selector="Window[IsActive=true] Grid#TOP">
			<Setter Property="IsEnabled" Value="True"/>
			<Setter Property="Background" Value="{DynamicResource TopPanelActiveColor}"/>
		</Style>
		<Style Selector="Window[IsActive=False] Grid#TOP">
			<Setter Property="IsEnabled" Value="False"/>
			<Setter Property="Background" Value="{DynamicResource TopPanelInActiveColor}"/>
		</Style>
		<Style Selector="Grid#DOTS:pointerover Button#b1 Svg">
			<Setter Property="Path" Value="/Assets/svgs/window/close.svg"/>
		</Style>
		<Style Selector="Grid#DOTS:not(:pointerover) Button#b1 Svg">
			<Setter Property="Path" Value="/Assets/svgs/window/empty.svg"/>
		</Style>
		<Style Selector="Grid#DOTS:pointerover Button#b2 Svg">
			<Setter Property="Path" Value="/Assets/svgs/window/curtail.svg"/>
		</Style>
		<Style Selector="Grid#DOTS:not(:pointerover) Button#b2 Svg">
			<Setter Property="Path" Value="/Assets/svgs/window/empty.svg"/>
		</Style>
		<Style Selector="Grid#DOTS:pointerover Button#b3 Svg">
			<Setter Property="Path" Value="/Assets/svgs/window/expand_max.svg"/>
		</Style>
		<Style Selector="Grid#DOTS:not(:pointerover) Button#b3 Svg">
			<Setter Property="Path" Value="/Assets/svgs/window/empty.svg"/>
		</Style>

		<Style Selector="Button.ArrowDown">
			<Setter Property="Foreground" Value="{DynamicResource  HomeTabSecondaryTextForeground}"/>			
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="CornerRadius" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>
		<Style Selector="Button.ArrowDown:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource  HomeTabPrimaryTextForeground}"/>
		</Style>
		<Style Selector="Button.ArrowDown:pressed /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource  HomeTabPrimaryTextForeground}"/>
		</Style>
		<Style Selector="Button.ArrowDown /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
			<!--<Setter Property="TextBlock.Foreground" Value="{DynamicResource  HomeTabPrimaryTextForeground}"/>-->
		</Style>
		<Style Selector="Button.ArrowDown:disabled /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource  HomeTabSecondaryTextForeground}"/>
			<!--<Setter Property="TextBlock.Foreground" Value="{DynamicResource  HomeTabPrimaryTextForeground}"/>-->
		</Style>
		<!--<Style Selector="Button.ArrowDown">
			<Setter Property="RenderTransform" Value="none" />
			<Setter Property="Transitions">
				<Transitions>
					<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
				</Transitions>
			</Setter>
		</Style>-->
		<Style Selector="Button.ArrowDown:pressed">
			<Setter Property="RenderTransform" Value="scale(0.99)" />
		</Style>
		<Style Selector="Button.PopUpMenuItem Grid">
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
		</Style>
		<Style Selector="Button.PopUpMenuItem">
			<Setter Property="Background" Value="{DynamicResource HomeTabPrimaryHeaderBackground}"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		</Style>
		<Style Selector="Button.PopUpMenuItem /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="TextBlock.Foreground" Value="White"/>
		</Style>
		<Style Selector="Button.PopUpMenuItem TextBlock">
			<Setter Property="Foreground" Value="{DynamicResource HomeTabPrimaryTextForeground}"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="TextAlignment" Value="Left"/>
			<Setter Property="Margin" Value="10, 0, 0, 0"/>
		</Style>
	</Window.Styles>
	<Grid>
		
		<Grid RowDefinitions="45, Auto, *">
			<Grid Name="TOP" Grid.Row="0" ColumnDefinitions="Auto, *, Auto">
				<Grid Name="DOTS" Grid.Column="0" ColumnDefinitions="Auto, Auto, Auto, Auto" VerticalAlignment="Stretch" Background="Transparent" Margin="10">
					<Button
						Name="b1"
						Command="{Binding closeCmd}"
						Classes="Button Semaphore"
						Grid.Column="0"
						Height="16"
						Width="16"
						Margin="5">
						<Svg>
						</Svg>
					</Button>
					<Button Name="b2"
							Command="{Binding minimizeCmd}"
							Classes="Button Semaphore"
							Grid.Column="1"
							Height="16"
							Width="16"
							Margin="5">
						<Svg>
						</Svg>
					</Button>
					<Button
						Name="b3"
						Command="{Binding maximizeCmd}"
						Classes="Button Semaphore"
						Grid.Column="2"
						Height="16"
						Width="16"
						Margin="5">
						<Svg>
						</Svg>
					</Button>
				</Grid>
				<ListBox Grid.Column="1"
						 Items="{Binding TabsList}"
						 SelectedItem="{Binding Content}"
						 Background="Transparent"
						 Foreground="White"
						 VerticalAlignment="Stretch">
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal"/>
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
					<ListBox.Styles>
						<Style Selector="ListBoxItem:selected /template/ ContentPresenter">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForegroundSelected}"/>
							<Setter Property="TextBlock.Background" Value="{DynamicResource TopPanelControlBackgroundSelected}"/>
						</Style>
						<Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForegroundPointerOver}"/>
							<Setter Property="TextBlock.Background" Value="{DynamicResource TopPanelControlBackgroundPointerOver}"/>
						</Style>
						<Style Selector="ListBoxItem:disabled /template/ ContentPresenter#PART_ContentPresenter">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForegroundDisabled}" />
						</Style>
						<Style Selector="ListBoxItem">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForeground}"/>
							<Setter Property="Padding" Value="15, 0, 15, 0"/>
						</Style>
					</ListBox.Styles>
					<ListBox.DataTemplates>
						<DataTemplate DataType="{x:Type tabvms:loginVM}">
							<tabview:TextTabHeaderNoClose/>
						</DataTemplate>
						<DataTemplate DataType="{x:Type tabvms:tokenVM}">
							<tabview:TextTabHeader/>
						</DataTemplate>
						<DataTemplate DataType="{x:Type tabvms:registrationVM}">
							<tabview:TextTabHeader/>
						</DataTemplate>
						<DataTemplate DataType="{x:Type tabvms:ScreenTab}">
							<tabview:TextTabHeader/>
						</DataTemplate>
						<DataTemplate DataType="{x:Type tabvms:homeVM}">
							<Grid VerticalAlignment="Stretch" Margin="2, 0, 0,-4" IsEnabled="False">
								<ContentControl>
									<material:MaterialIconExt Kind="Home" Size="22"/>
								</ContentControl>
							</Grid>
						</DataTemplate>
					</ListBox.DataTemplates>
				</ListBox>
				<Grid
					Grid.Column="2"
					ColumnDefinitions="Auto, Auto"
					Margin="0, 0, 15, 0">
					<TextBlock
						Grid.Column="0"
						VerticalAlignment="Center"
						Foreground="Gray"
						FontSize="12"
						Margin="2">
						Race UP CRM v0.66
					</TextBlock>
					<TextBlock
						Grid.Column="1"
						VerticalAlignment="Center"
						Foreground="White"
						FontSize="12"
						Margin="2">
						beta
					</TextBlock>
				</Grid>
			</Grid>
			<Grid				
				Grid.Row="1"
				Height="50"
				IsVisible="{Binding IsUserMenuVisible}"
				Background="{DynamicResource TopPanelActiveColor}"
				ColumnDefinitions="276, *, Auto">
				<Grid
					Grid.Column="0"
					ColumnDefinitions="5*, 1*"
					Background="{DynamicResource HomeTabPrimaryHeaderBackground}">
					<StackPanel
						Grid.Column="0"
						Margin="30, 0, 0, 0"
						VerticalAlignment="Center"
						HorizontalAlignment="Center">
						<TextBlock
							Foreground="{DynamicResource HomeTabPrimaryTextForeground}"
							FontSize="12">
							<TextBlock.Text>
								<MultiBinding StringFormat="{}{0} {1}">
									<Binding Path="User.FirstName"/>
									<Binding Path="User.LastName"/>
								</MultiBinding>
							</TextBlock.Text>
						</TextBlock>
						<TextBlock
							Text="{Binding User.Email}"
							Foreground="{DynamicResource HomeTabSecondaryTextForeground}"
							FontSize="12">
						</TextBlock>
					</StackPanel>
					<Separator
						IsVisible="{Binding IsStripVisible}"
						BorderBrush="{DynamicResource TopPanelActiveColor}"
						BorderThickness="0, 0, 1, 0"/>
				</Grid>
				<Grid
					Grid.Column="1"
					Background="{DynamicResource HomeTabPrimaryHeaderBackground}">
				</Grid>
				<Grid
					Grid.Column="2"
					Name="profileGrid"
					Background="{DynamicResource HomeTabPrimaryHeaderBackground}"
					Width="200">
					<Grid
						HorizontalAlignment="Right">
						<ToggleButton
							Height="50"
							Width="50"
							CornerRadius="0"
							BorderThickness="0"
							Margin="-140, 0, 0, 0">
							<Svg
								Height="15"
								Width="15"
								Name="PART_Bell">
							</Svg>
							<ToggleButton.Styles>
								<Style Selector="ToggleButton[IsChecked=True] Svg#PART_Bell">
									<Setter Property="Path" Value="/Assets/svgs/topmenu/bell_enabled.svg"/>
								</Style>
								<Style Selector="ToggleButton[IsChecked=False] Svg#PART_Bell">
									<Setter Property="Path" Value="/Assets/svgs/topmenu/bell_disable.svg"/>
								</Style>
								<Style Selector="ToggleButton:not(:checked) /template/ ContentPresenter#PART_ContentPresenter">
									<Setter Property="Background" Value="Transparent"/>
								</Style>
								<Style Selector="ToggleButton:checked /template/ ContentPresenter#PART_ContentPresenter">
									<Setter Property="Background" Value="{DynamicResource TopPanelActiveColor}"/>
								</Style>
								<Style Selector="ToggleButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
									<Setter Property="Background" Value="{DynamicResource TopPanelActiveColor}"/>
								</Style>
							</ToggleButton.Styles>
						</ToggleButton>
						<!--<controls:InitialLetter
							Margin="-130, 0, 0, 0">
							<controls:InitialLetter.Styles>
								<Style Selector="TextBlock">
									<Setter Property="Text" Value="{Binding User.FullName[0]}"/>
								</Style>
							</controls:InitialLetter.Styles>
						</controls:InitialLetter>-->
						<Button
							Background="{Binding IsProfileMenuOpen, Converter={StaticResource userMenuBackgroundConverter}}"
							Margin="-90, 0, 10, 0"
							Command="{Binding profileMenuOpenCmd}"
							Height="50"	
							Width="80"
							CornerRadius="0"	
							BorderThickness="0"
							HorizontalAlignment="Right">
							<Grid
								HorizontalAlignment="Center"
								ColumnDefinitions="Auto, Auto">
								<controls:InitialLetter
									Grid.Column="0">
									<controls:InitialLetter.Styles>
										<Style Selector="TextBlock">
											<Setter Property="Text" Value="{Binding User.FirstName[0]}"/>
										</Style>
									</controls:InitialLetter.Styles>
								</controls:InitialLetter>
								<Svg
									Grid.Column="1"
									Margin="8, 0, 0, 0"
									Path="/Assets/svgs/topmenu/arrow_down_top.svg"
									Height="10"
									Width="10">
								</Svg>								
							</Grid>
							<Button.Styles>
								<Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
									<Setter Property="Background" Value="{DynamicResource TopPanelActiveColor}"/>
								</Style>
							</Button.Styles>
						</Button>
					</Grid>
				</Grid>
			</Grid>

			<Grid
				Name="Grid_WorkArea"				
				Grid.Row="2">
				<Grid.DataTemplates>
					<DataTemplate DataType="{x:Type tabvms:loginVM}">
						<tabview:loginTab/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type tabvms:tokenVM}">
						<tabview:tokenTab/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type tabvms:registrationVM}">
						<tabview:registrationTab/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type tabvms:homeVM}">
						<tabview:homeTab/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type tabvms:ScreenTab}">
						<Grid>
							<Grid.DataTemplates>
								<DataTemplate DataType="{x:Type scrnvm:UserEdit}">
									<scrnview:UserEdit/>
								</DataTemplate>
							</Grid.DataTemplates>
							<ContentControl Content="{Binding Screen}"/>
						</Grid>
					</DataTemplate>
				</Grid.DataTemplates>
				<ContentControl Content="{Binding Content}"/>
			</Grid>
		</Grid>
		
		<Grid Name="OverlayGrid" Background="Gray" Opacity="0.7" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
		</Grid>

		<Grid Name="Popup"
			  Height="40"
			  IsVisible="{Binding bottomPopup.IsVisible}"
			  Opacity="{Binding bottomPopup.Opacity}"			  			  
			  VerticalAlignment="Bottom"
			  Margin="0, 0, 0, 100"
			  HorizontalAlignment="Center">
			<Border
				Background="#FF2C2C2C"
				CornerRadius="5"
				Padding="10">
				<TextBlock
					Text="{Binding bottomPopup.Text}"
					VerticalAlignment="Center"
					HorizontalAlignment="Center"
					Foreground="White"
					FontSize="12">
				</TextBlock>
			</Border>
			<Grid.Transitions>
				<Transitions>
					<DoubleTransition Property="Opacity" Duration="0:0:0.2"/>
				</Transitions>
			</Grid.Transitions>			
		</Grid>
		
		<Popup
			IsOpen="{Binding IsProfileMenuOpen, Mode=TwoWay}"
			WindowManagerAddShadowHint="False"						
			StaysOpen="False"
			VerticalOffset="7"
			HorizontalOffset="-7"
			PlacementTarget="{Binding ElementName=profileGrid}">
			<controls:userProfilePopup/>
		</Popup>
	</Grid>
</Window>
